(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{321:function(t,a,l){"use strict";l.r(a);var s=l(15),e=Object(s.a)({},(function(){var t=this,a=t.$createElement,l=t._self._c||a;return l("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[l("h1",{attrs:{id:"react基础"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#react基础"}},[t._v("#")]),t._v(" React基础")]),t._v(" "),l("h2",{attrs:{id:"jsx语法"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#jsx语法"}},[t._v("#")]),t._v(" JSX语法")]),t._v(" "),l("ol",[l("li",[t._v("定义虚拟DOM时，不要写引号；")]),t._v(" "),l("li",[t._v("标签中混入JS表达式时要用{}；")]),t._v(" "),l("li",[t._v("样式的类名指定不要用class，要用className；")]),t._v(" "),l("li",[t._v("内联样式，要用下面的形式去写；"),l("div",{staticClass:"language-html extra-class"},[l("pre",{pre:!0,attrs:{class:"language-html"}},[l("code",[t._v("style={{key: value}} \n")])])])]),t._v(" "),l("li",[t._v("只有一个根标签；")]),t._v(" "),l("li",[t._v("标签必须闭合；")]),t._v(" "),l("li",[t._v("标签首字母\n"),l("ul",[l("li",[t._v("若小写字母开头，则将标签转为html中同名原色，若html中无该标签对应的同名元素，则报错；")]),t._v(" "),l("li",[t._v("若大写字母开头，reaxt就去渲染对应的组件，若组件没有定义，则报错。")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);