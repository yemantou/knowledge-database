(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{280:function(t,r,a){t.exports=a.p+"assets/img/browser.8b576195.png"},328:function(t,r,a){"use strict";a.r(r);var v=a(15),s=Object(v.a)({},(function(){var t=this,r=t.$createElement,v=t._self._c||r;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"浏览器架构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#浏览器架构"}},[t._v("#")]),t._v(" 浏览器架构")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"custom-block-title"},[t._v("学习课程")]),t._v(" "),v("p",[v("a",{attrs:{href:"https://time.geekbang.org/column/article/113513",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器的工作原理及实践"),v("OutboundLink")],1)])]),t._v(" "),v("h3",{attrs:{id:"进程与线程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#进程与线程"}},[t._v("#")]),t._v(" 进程与线程")]),t._v(" "),v("p",[t._v("多线程可以并行处理任务，但是"),v("strong",[t._v("线程是不能单独存在的，它是由进程来启动和管理的")]),t._v("。")]),t._v(" "),v("p",[t._v("**一个进程就是一个程序的运行实例。**详细解释就是，启动一个程序的时候，操作系统会为该程序创建一块内存，用来存放代码、运行中的数据和一个执行任务的主线程，我们把这样的一个运行环境叫进程。")]),t._v(" "),v("p",[v("strong",[t._v("线程是依附于进程的，而进程中使用多线程并行处理能提升运算效率。")])]),t._v(" "),v("h4",{attrs:{id:"进程与线程的关系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#进程与线程的关系"}},[t._v("#")]),t._v(" 进程与线程的关系：")]),t._v(" "),v("ul",[v("li",[t._v("进程中的任意一线程执行出错，都会导致整个进程的崩溃。")]),t._v(" "),v("li",[t._v("线程之间共享进程中的数据。")]),t._v(" "),v("li",[t._v("当一个进程关闭之后，操作系统会回收进程所占用的内存")]),t._v(" "),v("li",[t._v("进程之间的内容相互隔离")])]),t._v(" "),v("h3",{attrs:{id:"目前多进程架构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#目前多进程架构"}},[t._v("#")]),t._v(" 目前多进程架构")]),t._v(" "),v("p",[v("strong",[t._v("最新的Chrome进程架构：")]),t._v(" "),v("img",{attrs:{src:a(280),alt:"最新的Chrome进程架构"}})]),t._v(" "),v("p",[t._v("最新的 Chrome 浏览器包括：1 个浏览器（Browser）主进程、1 个 GPU 进程、1 个网络（NetWork）进程、多个渲染进程和多个插件进程。")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("浏览器进程")]),t._v("。主要负责界面显示、用户交互、子进程管理，同时提供存储等功能。")]),t._v(" "),v("li",[v("strong",[t._v("渲染进程")]),t._v("。核心任务是将 HTML、CSS 和 JavaScript 转换为用户可以与之交互的网页，排版引擎 Blink 和 JavaScript 引擎 V8 都是运行在该进程中，默认情况下，\nChrome 会为每个 Tab 标签创建一个渲染进程。出于安全考虑，渲染进程都是运行在沙箱模式下。")]),t._v(" "),v("li",[v("strong",[t._v("GPU 进程")]),t._v("。其实，Chrome 刚开始发布的时候是没有 GPU 进程的。而 GPU 的使用初衷是为了实现 3D CSS 的效果，只是随后网页、Chrome 的 UI 界面都选择采用 GPU 来绘制，\n这使得 GPU 成为浏览器普遍的需求。最后，Chrome 在其多进程架构上也引入了 GPU 进程。")]),t._v(" "),v("li",[v("strong",[t._v("网络进程")]),t._v("。主要负责页面的网络资源加载，之前是作为一个模块运行在浏览器进程里面的，直至最近才独立出来，成为一个单独的进程。")]),t._v(" "),v("li",[v("strong",[t._v("插件进程")]),t._v("。主要是负责插件的运行，因插件易崩溃，所以需要通过插件进程来隔离，以保证插件进程崩溃不会对浏览器和页面造成影响。")])]),t._v(" "),v("h3",{attrs:{id:"带来了一些问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#带来了一些问题"}},[t._v("#")]),t._v(" 带来了一些问题")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("更高的资源占用")]),t._v("，因为每个进程都会包含公共基础结构的副本（如 JavaScript 运行环境），这就意味着浏览器会消耗更多的内存资源。")]),t._v(" "),v("li",[v("strong",[t._v("更复杂的体系架构")]),t._v("，浏览器各模块之间耦合性高、扩展性差等问题，会导致现在的架构已经很难适应新的需求了。")])]),t._v(" "),v("h3",{attrs:{id:"未来面向服务的架构-soa"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#未来面向服务的架构-soa"}},[t._v("#")]),t._v(" 未来面向服务的架构（SOA）")]),t._v(" "),v("p",[t._v("Chrome 最终要把 UI、数据库、文件、设备、网络等模块重构为基础服务，类似操作系统底层服务。")]),t._v(" "),v("h3",{attrs:{id:"面试题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#面试题"}},[t._v("#")]),t._v(" 面试题")]),t._v(" "),v("h4",{attrs:{id:"为什么单进程浏览器当时不可以采用安全沙箱"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#为什么单进程浏览器当时不可以采用安全沙箱"}},[t._v("#")]),t._v(" 为什么单进程浏览器当时不可以采用安全沙箱？")]),t._v(" "),v("p",[t._v("如果一个进程使用了安全沙箱之后，该进程对于操作系统的权限就会受到限制，比如不能对一些位置的文件进行读写操作，而这些权限浏览器主进程所需要的，所以安全沙箱是不能应用到浏览器主进程之上的。")]),t._v(" "),v("h4",{attrs:{id:"打开chrome浏览器一个tab页面-至少会出现几个进程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#打开chrome浏览器一个tab页面-至少会出现几个进程"}},[t._v("#")]),t._v(" 打开Chrome浏览器一个Tab页面，至少会出现几个进程？")]),t._v(" "),v("p",[t._v("最新的Chrome浏览器包括至少四个:1 个浏览器（Browser）主进程、1 个 GPU 进程、1 个网络（NetWork）进程、多个渲染进程和多个插件进程,当然还有复杂的情况；")]),t._v(" "),v("ol",[v("li",[t._v("页面中有iframe的话,iframe会单独在进程中；")]),t._v(" "),v("li",[t._v("有插件的话，插件也会开启进程；")]),t._v(" "),v("li",[t._v("多个页面属于同一站点，并且从a打开b页面，会共用一个渲染进程；")]),t._v(" "),v("li",[t._v("装了扩展的话，扩展也会占用进程。")])]),t._v(" "),v("p",[t._v("这些进程都可以通过Chrome任务管理器来查看")]),t._v(" "),v("h4",{attrs:{id:"即使如今多进程架构-还是会碰到单页面卡死的最终崩溃导致所有页面崩溃的情况-讲一讲你的理解"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#即使如今多进程架构-还是会碰到单页面卡死的最终崩溃导致所有页面崩溃的情况-讲一讲你的理解"}},[t._v("#")]),t._v(" 即使如今多进程架构，还是会碰到单页面卡死的最终崩溃导致所有页面崩溃的情况，讲一讲你的理解？")]),t._v(" "),v("p",[t._v("Chrome的默认策略是，每个标签对应一个渲染进程。但是如果从一个页面打开了新页面，而新页面和当前页面属于同一站点时，那么新页面会复用父页面的渲染进程。官方把这个默认策略叫process-per-site-instance。"),v("br"),t._v("\n更加简单的来说，就是如果多个页面符合同一站点，这几个页面会分配到一个渲染进程中去,所以有这样子的一种情况,一个页面崩溃了，会导致同一个站点的其他页面也奔溃，这是因为它们使用的是同一个渲染进程。")])])}),[],!1,null,null,null);r.default=s.exports}}]);