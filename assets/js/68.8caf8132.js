(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{358:function(e,v,_){"use strict";_.r(v);var l=_(15),r=Object(l.a)({},(function(){var e=this,v=e.$createElement,_=e._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[_("h3",{attrs:{id:"flexbox-的两根轴线-主轴和交叉轴"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#flexbox-的两根轴线-主轴和交叉轴"}},[e._v("#")]),e._v(" flexbox 的两根轴线（主轴和交叉轴）")]),e._v(" "),_("p",[e._v("主轴由"),_("code",[e._v("flex-direction")]),e._v("定义，另一根轴垂直于它。")]),e._v(" "),_("div",{staticClass:"custom-block tip"},[_("p",{staticClass:"custom-block-title"},[e._v("提示")]),e._v(" "),_("p",[e._v("flexbox 的特性是沿着主轴或者交叉轴对齐之中的元素。")])]),e._v(" "),_("h4",{attrs:{id:"主轴"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#主轴"}},[e._v("#")]),e._v(" 主轴")]),e._v(" "),_("p",[e._v("由"),_("code",[e._v("flex-direction")]),e._v("定义，可取值4个：")]),e._v(" "),_("ul",[_("li",[e._v("row")]),e._v(" "),_("li",[e._v("row-reverse")]),e._v(" "),_("li",[e._v("column")]),e._v(" "),_("li",[e._v("column-reverse")])]),e._v(" "),_("p",[e._v("row 或者 row-reverse，主轴将沿着 inline 方向延伸。"),_("br"),e._v("\ncolumn 或者 column-reverse，主轴会沿着上下方向延伸 — 也就是 block 排列的方向。")]),e._v(" "),_("h4",{attrs:{id:"交叉轴"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#交叉轴"}},[e._v("#")]),e._v(" 交叉轴")]),e._v(" "),_("p",[e._v("交叉轴垂直于主轴。")]),e._v(" "),_("h3",{attrs:{id:"起始线和终止线"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#起始线和终止线"}},[e._v("#")]),e._v(" 起始线和终止线")]),e._v(" "),_("p",[e._v("为什么不用上下左右来描述 flexbox 元素的方向："),_("br"),e._v("\nflex-direction 是 row ，并且我是在书写英文，那么主轴的起始线是左边，终止线是右边；"),_("br"),e._v("\n书写阿拉伯文，那么主轴的起始线是右边，终止线是左边。"),_("br"),e._v("\n这两种情况下，交叉轴的起始线是 flex 容器的顶部，终止线是底部，因为两种语言都是水平书写模式。")]),e._v(" "),_("h3",{attrs:{id:"flex-容器"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#flex-容器"}},[e._v("#")]),e._v(" Flex 容器")]),e._v(" "),_("p",[e._v("把一个容器的 display 属性值改为 flex 或者 inline-flex，flex 容器中的所有 flex 元素都会有下列行为：")]),e._v(" "),_("ul",[_("li",[e._v("元素排列为一行 (flex-direction 属性的初始值是 row)；")]),e._v(" "),_("li",[e._v("元素从主轴的起始线开始；")]),e._v(" "),_("li",[e._v("元素不会在主维度方向拉伸，但是可以缩小；")]),e._v(" "),_("li",[e._v("元素被拉伸来填充交叉轴大小；")]),e._v(" "),_("li",[e._v("flex-basis（flex 元素在主轴方向上的初始大小） 属性为 auto；")]),e._v(" "),_("li",[e._v("flex-wrap（flex 元素单行显示还是多行显示） 属性为 nowrap")])]),e._v(" "),_("h3",{attrs:{id:"简写属性-flex-flow"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#简写属性-flex-flow"}},[e._v("#")]),e._v(" 简写属性 flex-flow")]),e._v(" "),_("p",[e._v("是 flex-direction 和 flex-wrap 的简写，第一个指定的值为 flex-direction ，第二个指定的值为 flex-wrap。")]),e._v(" "),_("h3",{attrs:{id:"可用空间-available-space"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#可用空间-available-space"}},[e._v("#")]),e._v(" 可用空间 available space")]),e._v(" "),_("p",[e._v("假设在 1 个 500px 的容器中，我们有 3 个 100px 宽的元素，那么这 3 个元素需要占 300px 的宽，剩下 200px 的"),_("strong",[e._v("可用空间"),_("code",[e._v("available space")])]),e._v("。在默认情况下，flexbox 的行为会把这 200px 的空间留在最后一个元素的后面。"),_("br"),e._v("\n如果期望这些元素能自动地扩展去填充满剩下的空间，那么我们需要去控制可用空间在这几个元素间如何分配，这就是元素上的那些 flex 属性要做的事。")]),e._v(" "),_("h3",{attrs:{id:"flex-元素上的属性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#flex-元素上的属性"}},[e._v("#")]),e._v(" flex 元素上的属性")]),e._v(" "),_("ul",[_("li",[_("strong",[e._v("flex-grow（负值无效，默认为 0）")]),_("br"),e._v("\n处理 flex 元素在主轴上增加空间的问题，设置"),_("code",[e._v("flex")]),e._v("元素按主轴方向的增长系数，会使该元素延展，并占据此方向轴上的可用空间（available space）。"),_("br"),e._v(" "),_("code",[e._v("flex-grow")]),e._v("属性可以按比例分配空间。\n如果一共三个元素，第一个元素"),_("code",[e._v("flex-grow")]),e._v("值为 2，其他元素值为 1，则第一个元素将占有 2/4, 另外两个元素各占有1/4。")]),e._v(" "),_("li",[_("strong",[e._v("flex-shrink")]),_("br"),e._v("\n处理 flex 元素收缩的问题，可以赋予不同的值来控制 flex 元素收缩的程度，可以按比例收缩。")]),e._v(" "),_("li",[_("strong",[e._v("flex-basis")]),_("br"),e._v("\nflex 元素是在这个基准值的基础上缩放的。"),_("br"),e._v("\n定义了元素的空间大小，默认值是 auto。"),_("br"),e._v("\n如果没有给元素设定尺寸，flex-basis 的值采用元素内容的尺寸。")]),e._v(" "),_("li",[e._v("order"),_("br"),e._v("\n定义元素的排列顺序。数值越小，排列越靠前，默认为0。")]),e._v(" "),_("li",[e._v("align-self"),_("br"),e._v("\n允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。")])]),e._v(" "),_("h3",{attrs:{id:"flex-属性的简写"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#flex-属性的简写"}},[e._v("#")]),e._v(" Flex 属性的简写")]),e._v(" "),_("p",[e._v("Flex 简写形式允许你把三个数值按这个顺序书写 — flex-grow，flex-shrink，flex-basis。"),_("br"),e._v("\n即："),_("code",[e._v("flex: flex-grow flex-shrink flex-basis;")]),e._v("。")]),e._v(" "),_("h4",{attrs:{id:"几种预定义的值"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#几种预定义的值"}},[e._v("#")]),e._v(" 几种预定义的值")]),e._v(" "),_("ul",[_("li",[e._v("flex: initial"),_("br"),e._v("\n相当于 flex: 0 1 auto，素既不可以拉伸可以收缩")]),e._v(" "),_("li",[e._v("flex: auto\n等同于 flex: 1 1 auto，元素既可以拉伸也可以收缩")]),e._v(" "),_("li",[e._v("flex: none\nflex: 0 0 auto，元素既不能拉伸或者收缩")]),e._v(" "),_("li",[e._v("flex: number"),_("br"),e._v("\n常看到的 flex: 1 或者 flex: 2 等等， 它相当于flex: 1 1 0。元素可以在flex-basis为 0 的基础上伸缩。")])]),e._v(" "),_("h3",{attrs:{id:"元素间的对齐和空间分配-容器的属性"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#元素间的对齐和空间分配-容器的属性"}},[e._v("#")]),e._v(" 元素间的对齐和空间分配（容器的属性）")]),e._v(" "),_("ul",[_("li",[e._v("align-items"),_("br"),e._v("\n使元素在交叉轴方向对齐\n"),_("ul",[_("li",[e._v("stretch（初始值）"),_("br"),e._v("\n拉伸来填满 flex 容器 —— 最高的元素定义了容器的高度")]),e._v(" "),_("li",[e._v("flex-start"),_("br"),e._v("\n按 flex 容器的顶部对齐")]),e._v(" "),_("li",[e._v("flex-end"),_("br"),e._v("\nflex 容器的下部对齐")]),e._v(" "),_("li",[e._v("center"),_("br"),e._v("\n居中对齐")])])]),e._v(" "),_("li",[e._v("justify-content"),_("br"),e._v("\n使元素在主轴方向上对齐\n"),_("ul",[_("li",[e._v("stretch"),_("br"),e._v("\n均匀排列每个元素"),_("br"),e._v("\n'auto'-sized 的元素会被拉伸以适应容器的大小")]),e._v(" "),_("li",[e._v("flex-start（初始值）"),_("br"),e._v("\n从容器的起始线排列")]),e._v(" "),_("li",[e._v("flex-end\n从终止线开始排列")]),e._v(" "),_("li",[e._v("center\n在中间排列")]),e._v(" "),_("li",[e._v("space-around\n使每个元素的左右空间相等")]),e._v(" "),_("li",[e._v("space-between\n使元素之间间隔相等")])])]),e._v(" "),_("li",[e._v("align-content"),_("br"),e._v("\n如何沿着弹性盒子布局的纵轴和网格布局的主轴在内容项之间和周围分配空间。（即：行怎么排列）"),_("br"),e._v("\n该属性对单行弹性盒子模型无效。（即：带有 flex-wrap: nowrap）\n"),_("ul",[_("li",[e._v("center"),_("br"),e._v("\n所有行朝向容器的中心填充。每行互相紧挨，相对于容器居中对齐。容器的垂直轴起点边和第一行的距离相等于容器的垂直轴终点边和最后一行的距离。")]),e._v(" "),_("li",[e._v("start"),_("br"),e._v("\n所有行从容器的起始边缘开始填充")]),e._v(" "),_("li",[e._v("end"),_("br"),e._v("\n所有行从容器的结束边缘开始填充。")]),e._v(" "),_("li",[e._v("flex-start"),_("br"),e._v("\n所有行从垂直轴起点开始填充。第一行的垂直轴起点边和容器的垂直轴起点边对齐。接下来的每一行紧跟前一行。")]),e._v(" "),_("li",[e._v("flex-end"),_("br"),e._v("\n所有行从垂直轴末尾开始填充。最后一行的垂直轴终点和容器的垂直轴终点对齐。同时所有后续行与前一个对齐。")]),e._v(" "),_("li",[e._v("space-between"),_("br"),e._v("\n均匀分布项目项目在上下两端有一半大小的空间")]),e._v(" "),_("li",[e._v("space-around"),_("br"),e._v("\n均匀分布项目项目周围有相等的空间")])])])])])}),[],!1,null,null,null);v.default=r.exports}}]);